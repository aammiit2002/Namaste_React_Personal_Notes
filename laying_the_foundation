⭐⭐⭐Topics covered:⭐⭐⭐
• JSX Introduced & its usage.
• Transpiling the JSX
• What is Babel
• Usage of class & className in JSX
• What are React Components?
• Class based & Functional components
• Component Composition
• Cross-Site Scripting
• JSX Expressions
• React Fragments
⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐

✅We can create scripts to create dev build an app
behind the scenes, it will run our project in dev mode
"scripts: {
  "start": "parcel index.html" //We wrote this for running our app in dev mode
  "build": "parcel build index.html" //We wrote this for running our app in production mode
}
⭐NOTE:-
now with the help of these scripts, we don't have to write these commands npx parcel build index.html etc,
we can use: npm run start(the keyword used in the script)/ npm start (this will only work for start as start is a keyword in npm won't work for build)

✅✅React Element = React.createElement => 
is an object => when rendered in DOM it becomes an HTML element.

✅✅But the syntax below looks very bad as it is not easy to write as compared to simple HTML
So the developers created JSX

⭐NOTE: JSX IS NOT A PART OF REACT, BOTH ARE DIFFERENT: Because we can build react apps using JSX all the big apps can be built
But JSX makes the life of developers easy

❓) HOW TO REACT H1 TAG INSIDE JSX?
The jsxHeading here is a react element
--> const jsxHeading = <h1>Namaste React using JSX</h1>;
📌📌📌 JSX IS NOT HTML INSIDE JAVASCRIPT 
JSX is an HTML or XML-like syntax

✅✅✅ JS engine does not understand JSX
const jsxHeading = <h1>Namaste React using JSX</h1>;
This is not a valid pure javascript
That's why when we write this code in the console of Chrome it shows an error.

❓) But why does it still work in our project?
--> Because Parcel is behind it. Even before it goes to the JS engine it is transpired by the 
Parcel. Then JS engine receives the code that the browser understands. This whole thing is done
by a package in Parcel known as Babel.
❓) What is Babel?
--> A source-to-source compiler, transcompiler or transpiler is a type of compiler that takes the
 source code of a program written in one programming language as its input and produces the equivalent
 source code in another programming language.

We use Babel with React to transpile the JSX code into simple React functions that can be understood by browsers. 
Using this way we can assure that our JSX code can work in almost any browser. This combination is widely used in modern-day web development
Converts JSX code => React Element i.e JS Object => HTML element(render)

📌📌📌JSX📌📌📌
--> In JSX you need to give the class name as className and id as id is fine
Ex: const jsxHeading = (
  <h1 className="head">
    Namaste React using JSX
  </h1>
);
⭐NOTE: In the above code if we write the JSX in a single line it is fine but
if we want to write it in multiple lines then we have to put () and write the JSX inside it. 
⭐NOTE: So if we have to give attributes to JSX then we need to use Camel case

H/W: Explore various attributes of various tags

📌📌📌React Components📌📌📌
General statement: Everything in react is a Component. EX: header, search bar, footer, text box etc.
=> Components are of two types:-
1) Class-based components: OLD WAY TO WRITE THE CODE
2) Functional Components: NEW WAY TO WRITE THE CODE

✅ React Functional Components:-
--> It is just a normal JavaScript Function that returns some JSX.
-->Whenever we are naming a functional Component write it with a capital letter otherwise will give an error.
EX: const HeadingComponent = () => {
  return <h1>Namaste React Functional Component</h1>;
};
⭐NOTE: Arrow function can also be written in this way
-->const fn = () => true;
this is the same as:
-->const fn = () => {
return true
};
-->const HeadingComponent = () => (
  return <h1>Namaste React Functional Component</h1>
);
❓ How to render Functional Component
-->root.render(<heading/>);
❓ How to render React Element
--> root.render(heading);
❓ What is Component composition?
--> composing two components inside one another 
component inside the component
EX: const Title = () => <h1 className="head">Namaste React using JSX</h1>;

const HeadingComponent = () => (
  <div id="container">
    <Title />
    <h1 className="heading">Namaste React Functional component</h1>
  </div>
);
❓ How to put an element inside a component




